[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_330048001651303432383339-if00
restart_method: command
##--------------------------------------------------------------------

[include canbus.cfg]
[include mainsail.cfg]
[include TEST_SPEEDS.cfg]
#[include tacho.cfg]
[exclude_object]
[include K-ShakeTune/*.cfg]
[include sb.cfg]
[include bedfans.cfg]

[firmware_retraction]
retract_length: 0.4
retract_speed: 35
unretract_speed: 35

[printer]
kinematics: corexy
max_velocity: 400  
max_accel: 7500             #Max 4000
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 12.0

# Enable arcs support
[gcode_arcs]
resolution: 0.1

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[autotune_tmc stepper_x]
motor: omc-14hs20-1504s-c19
pwm_freq_target: 40e3 #(or try 45e3 as well)

[autotune_tmc stepper_y]
motor: omc-14hs20-1504s-c19
pwm_freq_target: 40e3 #(or try 45e3 as well)

##  B Stepper - Left
##  Connected to MOTOR_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
position_endstop: 180
position_max: 180
homing_speed: 100 #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG11
position_min: 0
position_endstop: 180
position_max: 180
homing_speed: 100  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
  
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 180
position_min: -5
homing_speed: 8
homing_retract_dist: 0

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0



#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA3
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1.0
min_temp: 0
max_temp: 120

#####################################################################
#   Beacon Settings
#####################################################################

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_020B24C65157355957202020FF12162A-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 30 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
speed: 3
lift_speed: 100
contact_max_hotend_temperature: 180 # increase to probe at print temps
home_xy_position: 90, 90 # update with your safe position
home_z_hop: 5
home_z_hop_speed: 30
home_xy_move_speed: 300
home_method: contact # use proximity for induction homing
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: unhomed # contact will calibrate beacon on first home
accel_scale: 16g
accel_axes_map: -x, -y, z

[resonance_tester]
accel_chip: beacon
probe_points: 90, 90, 20
accel_per_hz: 100
hz_per_sec: 0.5

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
    BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=10 RETRY_TOLERANCE=1
    BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=2


#####################################################################
#   Fan Control
#####################################################################

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
max_power: .6

# [fan_generic nevermore]
# pin: PD14
# shutdown_speed: 0.0
# kick_start_time: 5.0

# [heater_fan nevermore_fan]
# pin: PD14
# max_power: 0.75
# shutdown_speed: 0.0
# kick_start_time: 5.0
# heater: heater_bed
# heater_temp: 50
# fan_speed: 1.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
   -60.2,-10.4
   244.1,234.5
#  Probe points
points:
   15,0
   15,140
   170,140
   170,0

#--------------------------------------------------------------------
speed: 400
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 15
mesh_min: 35, 30
mesh_max: 140,170
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
zero_reference_position: 90, 90
adaptive_margin: 5

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    Attach_Probe_Lock
    G28
    QUAD_GANTRY_LEVEL
    G28
    Dock_Probe_Unlock
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

# [gcode_macro PRINT_START]
# gcode:

#     {% set BED = params.BED|int %}
#     {% set HOTEND = params.HOTEND|int %}
#     {% set CHAMBER = params.CHAMBER|default(0)|int %}

#     M104 S140															                                ; set hotend to no-ooze temp
#     M190 S{BED}                                                                                        ; Set bed temp
#     G28                                                                                                 ; home
#     G90                                                                                                 ; absolute positioning
#     TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MINIMUM={CHAMBER}  
#     Attach_Probe_Lock
#     QUAD_GANTRY_LEVEL                                                                                   ; QGL
#     G28 Z																								; home z
#     BED_MESH_CLEAR
#     BED_MESH_CALIBRATE ADPATIVE=1
#     Dock_Probe_Unlock
#     M109 S{HOTEND}                                                                                      ; wait for hotend temp
#     G92 E0
#     M83


[gcode_macro PRINT_START]
gcode:
 # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.HOTEND|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G0 Z2
  G90                   # Absolut position
  _SET_MPC_MATERIAL MATERIAL={params.MATERIAL}
;_SET_MPC_MATERIAL MATERIAL=ABS
  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  SET_GCODE_OFFSET Z=0

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S105;{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    #G4 P120000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S160                                   # Heats the nozzle to 150c
  G28 Z METHOD=CONTACT CALIBRATE=1
  STATUS_CALIBRATING_Z

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  #SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1 RUNS=2                 # Starts bed mesh
  CLEANNOZZLE
  G28 Z METHOD=CONTACT CALIBRATE=0
  STATUS_CALIBRATING_Z

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
  SET_GCODE_OFFSET Z=0.06

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  #Dock_Probe_Unlock
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position
  STATUS_PRINTING

   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

# Filament runout / change alias	
[gcode_macro M600]
gcode:
	PAUSE

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state


[temperature_sensor pi]
sensor_type: temperature_host

[temperature_sensor octopus]
sensor_type: temperature_mcu

[temperature_sensor chamber]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: -200
max_temp: 200
gcode_id: C

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}


#[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.489
#*# pid_ki = 1.644
#*# pid_kd = 202.515
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 65.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 71.4
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.010867, 0.030524, 0.026643, 0.021188, -0.002354
#*# 	-0.004129, -0.002364, -0.001275, -0.014273, -0.054392
#*# 	0.018352, 0.012486, 0.001893, -0.023303, -0.067983
#*# 	0.034303, 0.038451, 0.023076, -0.002906, -0.053529
#*# 	0.015664, 0.026318, 0.021229, 0.003243, -0.038838
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 140.0
#*# min_y = 30.0
#*# max_y = 170.0
#*#
#*# [beacon model default]
#*# model_coef = 1.6866742559128087,
#*# 	  1.9089099792447264,
#*# 	  0.7386647300414513,
#*# 	  0.47829366839640175,
#*# 	  0.5318453312944958,
#*# 	  -0.8474455684288762,
#*# 	  -0.8759621476472568,
#*# 	  1.540681773106474,
#*# 	  0.515289890997634,
#*# 	  -0.6766181713120609
#*# model_domain = 1.861296736944817e-07,1.9359261355087e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 27.751728
#*# model_offset = 0.00000
